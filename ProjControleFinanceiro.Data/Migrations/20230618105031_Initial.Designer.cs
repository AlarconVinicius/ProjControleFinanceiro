// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjControleFinanceiro.Data.Configuracao;

#nullable disable

namespace ProjControleFinanceiro.Data.Migrations
{
    [DbContext(typeof(ContextoBase))]
    [Migration("20230618105031_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProjControleFinanceiro.Entities.Entidades.Cartao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ContaId")
                        .HasColumnType("int");

                    b.Property<int>("DiaVencimento")
                        .HasColumnType("int");

                    b.Property<int>("DiferencaDias")
                        .HasColumnType("int");

                    b.Property<double>("Limite")
                        .HasColumnType("float");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Saldo")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ContaId");

                    b.ToTable("Cartoes");
                });

            modelBuilder.Entity("ProjControleFinanceiro.Entities.Entidades.Conta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Saldo")
                        .HasColumnType("float");

                    b.Property<int>("TipoConta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("ProjControleFinanceiro.Entities.Entidades.Fatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<int>("CartaoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFechamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CartaoId");

                    b.ToTable("Faturas");
                });

            modelBuilder.Entity("ProjControleFinanceiro.Entities.Entidades.Transacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CartaoId")
                        .HasColumnType("int");

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<int>("ContaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FaturaId")
                        .HasColumnType("int");

                    b.Property<int>("MetodoPagamento")
                        .HasColumnType("int");

                    b.Property<bool>("Pago")
                        .HasColumnType("bit");

                    b.Property<int?>("QtdRepeticao")
                        .HasColumnType("int");

                    b.Property<bool>("Repete")
                        .HasColumnType("bit");

                    b.Property<int>("TipoTransacao")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CartaoId");

                    b.HasIndex("ContaId");

                    b.HasIndex("FaturaId");

                    b.ToTable("Transacoes");
                });

            modelBuilder.Entity("ProjControleFinanceiro.Entities.Entidades.Cartao", b =>
                {
                    b.HasOne("ProjControleFinanceiro.Entities.Entidades.Conta", "Conta")
                        .WithMany()
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");
                });

            modelBuilder.Entity("ProjControleFinanceiro.Entities.Entidades.Fatura", b =>
                {
                    b.HasOne("ProjControleFinanceiro.Entities.Entidades.Cartao", "Cartao")
                        .WithMany("Faturas")
                        .HasForeignKey("CartaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartao");
                });

            modelBuilder.Entity("ProjControleFinanceiro.Entities.Entidades.Transacao", b =>
                {
                    b.HasOne("ProjControleFinanceiro.Entities.Entidades.Cartao", "Cartao")
                        .WithMany()
                        .HasForeignKey("CartaoId");

                    b.HasOne("ProjControleFinanceiro.Entities.Entidades.Conta", "Conta")
                        .WithMany()
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjControleFinanceiro.Entities.Entidades.Fatura", "Fatura")
                        .WithMany("Transacoes")
                        .HasForeignKey("FaturaId");

                    b.Navigation("Cartao");

                    b.Navigation("Conta");

                    b.Navigation("Fatura");
                });

            modelBuilder.Entity("ProjControleFinanceiro.Entities.Entidades.Cartao", b =>
                {
                    b.Navigation("Faturas");
                });

            modelBuilder.Entity("ProjControleFinanceiro.Entities.Entidades.Fatura", b =>
                {
                    b.Navigation("Transacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
